services:
  jenkins:
    container_name: jenkins_container
    image: jenkins/jenkins:lts
    restart: on-failure
    ports:
      - "8085:8080"
      - "50000:50000"
    networks:
      - devops
  
  postgres:
    container_name: postgres_container
    image: postgres:12
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s
    networks:
      - devops

  sonarqube:
    container_name: sonarqube_container
    image: sonarqube:community
    ports:
      - "9090:9000"
    environment:
      SONAR_JDBC_URL: "jdbc:postgresql://postgres_container:5432/${POSTGRES_DB}"
      SONAR_JDBC_USERNAME: ${POSTGRES_USER}
      SONAR_JDBC_PASSWORD: ${POSTGRES_PASSWORD}
    depends_on:
      postgres:
        condition: service_healthy
    restart: always
    networks:
      - devops

networks:
  devops:
    driver: bridge
    name: devops
